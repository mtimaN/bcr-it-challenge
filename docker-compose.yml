version: '3.8'
services:
  cassandra:
    image: cassandra:latest
    container_name: cassandraDB
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_AUTHENTICATOR=PasswordAuthenticator
      - CASSANDRA_AUTHORIZER=CassandraAuthorizer
      - CASSANDRA_START_RPC=true
      - CASSANDRA_CLUSTER_NAME=cassandraCluster
      - CASSANDRA_PASSWORD_SEEDER=true
      - CASSANDRA_SEEDS=cassandra
      - CASSANDRA_USER=admin
      - CASSANDRA_PASSWORD=CPass0319
    volumes:
      - cassandra_data:/var/lib/cassandra
      - ./internal/schema.cql:/docker-entrypoint-initdb.d/schema.cql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "cqlsh", "-u", "admin", "-p", "CPass0319", "-e", "describe keyspaces"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:latest
    container_name: redisDB
    command: redis-server --requirepass RPass0319
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "RPass0319", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./internal/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./certs/server.crt:/etc/prometheus/certs/server.crt  # mount cert
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=GFPass0319
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./internal/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - app_network
    depends_on:
      - prometheus

networks:
  app_network:
    driver: bridge

volumes:
  cassandra_data:
  redis_data:
  prometheus_data:
  grafana_data:
